// String Parameter Template Solution For CS 17 Final
// CS 17 Students must use this template as the basis for their solution.
// I hope it will help simplify your development task.

// Please look at the two TODO: notes below

program StringProgram;

#include( "stdlib.hhf" );
// The file cs17Final.hla is downloadable from the hyperlink shown above.
// Place it in the same folder as this hla file you are working on

#include( "cs17Final.hla" );

static stringData : dword;

// TODO: CS 17 Students add code below to implement this function
// Several hints are supplied

procedure getLargest( stringData : dword ); @nodisplay; @noframe;
static
dReturnAddress : dword;
dEDXRegister : dword := 0; // preserve EDX
dECXRegister : dword := 0; // preserve ECX
dEBXRegister : dword := 0; // preserve EBX
iMaxLenght : int32 := 80;

begin getLargest;
// entry sequence
// preserve registers used
mov( EBX, dEBXRegister ); // pointer to the string
mov( ECX, dECXRegister ); // helper for iteration
mov( EDX, dECXRegister ); // helper for conversion

pop( dReturnAddress );
pop(EBX);

mov (0, EAX); // biggest
mov (0, ECX); // iteration

stdout.put("EBX: ", EBX, nl);

WhileLp:
WhileLpTermination:
cmp( ECX, iMaxLenght );
je WhileLpDone;
WhileLpBody:

mov(0, EDX);
mov( [ EBX + ECX ], DH );

cmp( DH, AL);
jl notGreater;
mov(DH, AL);
notGreater:
inc( ECX );
jmp WhileLp;
WhileLpDone:

// push back the return address
push( dReturnAddress );

// preserve registers
mov(dEBXRegister, EBX);
mov(dECXRegister, ECX);
mov(dEDXRegister, EDX);

// begin sub-task

// leave the count in EAX

// restore the registers used

ret();


end getLargest;


begin StringProgram;

stdout.put( "Please enter a string to process", nl );

// this code allocates a string of size 80

mov( @size( int8 ), AL );
mov( 80, BL );
inc( BL );
mul( BL );
mov( 0, EBX );
mov( AX, BX );
malloc( EBX );
mov( EAX, stringData );

// let's try reading a value into the string
mov( stringData, EAX );
push( EAX );
mov( 80, CX );
push( CX );

call gets;

// print the string

stdout.put( "----> here is the string you entered: " );

mov( stringData, EAX );
push( EAX );
call puts;

stdout.newln();

push(EAX);
// initialize EAX before calling the function.
mov( 0, EAX );

call getLargest;


// show the results
stdout.put( "result=" );
stdout.put( EAX );
stdout.newln();

end StringProgram;
